% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pick.R
\name{pick}
\alias{pick}
\title{Pick rows from ForestGEO censuses in a list of nested dataframe.}
\usage{
pick(.data, ..., key = NULL)
}
\arguments{
\item{.data}{A ForestGEO dataset of class 'censuses_lst' (a list) or
'censuses_df' (a nested dataframe).}

\item{...}{Other arguments passed to methods.}

\item{key}{Key dataframe to pick rows from and and recycle in all other
censuses}
}
\description{
This function allows you to pick rows from a key census (dataframe) in a list
or list-column and pick the exact same rows in all other non-key censuses.
}
\examples{
library(tidyr)

censuses_lst <- as_censuses(list(
  c1 = tibble::tibble(dbh = 1:2),
  c2 = tibble::tibble(dbh = 8:9)
))
censuses_lst
class(censuses_lst)

pick(censuses_lst, dbh == 1)
pick(censuses_lst, dbh >= 2)
pick(censuses_lst, dbh <= 8 , key = "c2")

dfm <- tibble::tribble(
  ~dbh, ~census,
    1L,       1,
    2L,       1,
    8L,       2,
    9L,       2
)
censuses_df <- as_censuses(nest(dfm, -census))
censuses_df
class(censuses_df)

out <- pick(censuses_df, dbh == 1)
out$data
# Same
censuses_df \%>\% pick(dbh == 1) \%>\% pull()

censuses_df \%>\% 
  pick(dbh <= 8) \%>\% 
  pull(data)

censuses_df \%>\% 
  pick(dbh <= 8, key = 2) \%>\% 
  pull(data)

censuses <- rdata_df(tool_example("rdata"), .id = "census") \%>\% 
  group_by(census) \%>\% 
  nest()
censuses

pick(censuses, dbh > 30, key = 1)
}
\seealso{
Other functions to pick or drop rows of a ForestGEO dataframe: \code{\link{drop_twice_dead}},
  \code{\link{filter_status}}, \code{\link{pick_drop}},
  \code{\link{pick_main_stem}}
}
\concept{functions to pick or drop rows of a ForestGEO dataframe}
